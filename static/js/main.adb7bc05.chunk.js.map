{"version":3,"sources":["components/Body.tsx","components/Legend.tsx","components/Display.tsx","App.tsx","index.tsx"],"names":["calculate","num1","num2","operator","Body","useState","current","setCurrent","prevAnswer","setPrevAnswer","setOperator","isDecimal","setIsDecimal","handleOperation","op","Number","startsWith","prev","substring","handleEquals","btnPressed","answer","handleSpecialOperation","toString","handleNumber","num","handleDecimal","Mousetrap","bind","e","key","Calculator","id","StyledButton","bgColor","onClick","className","styled","div","button","p","Legend","StyledDiv","colSpan","style","paddingBottom","Display","isNegative","workingAnswer","finalAnswer","includes","split","number","power","wholePart","indexOf","length","tempAns","Math","round","decimalPart","leadingZeros","App","Title","Wrapper","h2","render","document","getElementById"],"mappings":"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","file":"static/js/main.adb7bc05.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport { Display } from \".\";\nimport Mousetrap from \"mousetrap\";\nimport styled from \"styled-components\";\n\ntype Operator = \"+\" | \"-\" | \"/\" | \"*\";\ntype SpecialOperator = \"C\" | \"+/-\" | \"%\";\n\nconst calculate = (num1: number, num2: number, operator: Operator) => {\n  switch (operator) {\n    case \"+\":\n      return num1 + num2;\n    case \"-\":\n      return num1 - num2;\n    case \"*\":\n      return num1 * num2;\n    case \"/\":\n      return num1 / num2;\n    default:\n      return 0;\n  }\n};\n\nexport const Body: React.FC<{}> = () => {\n  const [current, setCurrent] = useState<string>(\"0\");\n  const [prevAnswer, setPrevAnswer] = useState<number>(0);\n  const [operator, setOperator] = useState<Operator | null>(null);\n\n  const [isDecimal, setIsDecimal] = useState<boolean>(false);\n\n  const handleOperation = (op: Operator) => {\n    setIsDecimal(false);\n    if (operator === null) {\n      if (current !== \"0\") {\n        setPrevAnswer(Number(current));\n        setCurrent(\"0\");\n        setOperator(op);\n      }\n    } else {\n      if (op === \"-\" && current === \"0\") {\n        return setCurrent(\"-0\");\n      } else if (current.startsWith(\"-\")) {\n        setCurrent((prev) => prev.substring(1));\n      }\n      if (current !== \"0\" && current !== \"-0\") {\n        handleEquals();\n      }\n      setOperator(op);\n    }\n  };\n\n  const handleEquals = (btnPressed: boolean = false) => {\n    if (operator !== null) {\n      const answer = calculate(prevAnswer, Number(current), operator);\n      setPrevAnswer(answer);\n      btnPressed ? setCurrent(`${answer}`) : setCurrent(\"0\");\n      setOperator(null);\n    }\n  };\n\n  const handleSpecialOperation = (operator: SpecialOperator) => {\n    switch (operator) {\n      case \"C\":\n        setCurrent(\"0\");\n        setPrevAnswer(0);\n        setOperator(null);\n        setIsDecimal(false);\n        break;\n      case \"+/-\":\n        current.startsWith(\"-\")\n          ? setCurrent((prev) => prev.substring(1))\n          : setCurrent((prev) => \"-\" + prev);\n        break;\n      case \"%\":\n        setCurrent((prev) => (Number(prev) / 100).toString());\n        break;\n      default:\n        break;\n    }\n  };\n\n  const handleNumber = (num: string) => {\n    current === \"0\"\n      ? setCurrent(num)\n      : current === \"-0\"\n      ? setCurrent(`-${num}`)\n      : setCurrent((prev) => prev + num);\n  };\n\n  const handleDecimal = () => {\n    if (!isDecimal) {\n      setIsDecimal(true);\n      setCurrent((prev) => prev + \".\");\n    }\n  };\n\n  // Handle keystrokes\n  Mousetrap.bind([\"c\", \"C\", \"esc\"], () => handleSpecialOperation(\"C\"));\n  Mousetrap.bind([\"%\"], () => handleSpecialOperation(\"%\"));\n  Mousetrap.bind([\"~\"], () => handleSpecialOperation(\"+/-\"));\n  Mousetrap.bind([\"/\"], () => handleOperation(\"/\"));\n  Mousetrap.bind([\"x\", \"X\", \"*\"], () => handleOperation(\"*\"));\n  Mousetrap.bind([\"-\"], () => handleOperation(\"-\"));\n  Mousetrap.bind([\"+\", \"space\"], () => handleOperation(\"+\"));\n  Mousetrap.bind([\"=\", \"enter\"], () => handleEquals(true));\n  Mousetrap.bind([\".\"], () => handleDecimal());\n  Mousetrap.bind([\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"], (e) =>\n    handleNumber(e.key)\n  );\n\n  return (\n    <Calculator>\n      <Display answer={current || `${prevAnswer}` || \"0\"} />\n      <div id=\"calc-buttons\">\n        <StyledButton\n          id=\"clear\"\n          bgColor=\"#666\"\n          onClick={() => handleSpecialOperation(\"C\")}\n        >\n          C\n        </StyledButton>\n        <StyledButton\n          bgColor=\"#666;\"\n          onClick={() => handleSpecialOperation(\"+/-\")}\n        >\n          +/-\n        </StyledButton>\n        <StyledButton\n          bgColor=\"#666;\"\n          onClick={() => handleSpecialOperation(\"%\")}\n        >\n          %\n        </StyledButton>\n        <StyledButton\n          id=\"divide\"\n          bgColor=\"orange;\"\n          onClick={() => handleOperation(\"/\")}\n        >\n          รท\n        </StyledButton>\n        <StyledButton\n          id=\"seven\"\n          bgColor=\"#aaa\"\n          onClick={() => handleNumber(\"7\")}\n        >\n          7\n        </StyledButton>\n        <StyledButton\n          id=\"eight\"\n          bgColor=\"#aaa\"\n          onClick={() => handleNumber(\"8\")}\n        >\n          8\n        </StyledButton>\n        <StyledButton\n          id=\"nine\"\n          bgColor=\"#aaa\"\n          onClick={() => handleNumber(\"9\")}\n        >\n          9\n        </StyledButton>\n        <StyledButton\n          id=\"multiply\"\n          bgColor=\"orange;\"\n          onClick={() => handleOperation(\"*\")}\n        >\n          x\n        </StyledButton>\n        <StyledButton\n          id=\"four\"\n          bgColor=\"#aaa\"\n          onClick={() => handleNumber(\"4\")}\n        >\n          4\n        </StyledButton>\n        <StyledButton\n          id=\"five\"\n          bgColor=\"#aaa\"\n          onClick={() => handleNumber(\"5\")}\n        >\n          5\n        </StyledButton>\n        <StyledButton id=\"six\" bgColor=\"#aaa\" onClick={() => handleNumber(\"6\")}>\n          6\n        </StyledButton>\n        <StyledButton\n          id=\"subtract\"\n          bgColor=\"orange;\"\n          onClick={() => handleOperation(\"-\")}\n        >\n          -\n        </StyledButton>\n        <StyledButton id=\"one\" bgColor=\"#aaa\" onClick={() => handleNumber(\"1\")}>\n          1\n        </StyledButton>\n        <StyledButton id=\"two\" bgColor=\"#aaa\" onClick={() => handleNumber(\"2\")}>\n          2\n        </StyledButton>\n        <StyledButton\n          id=\"three\"\n          bgColor=\"#aaa\"\n          onClick={() => handleNumber(\"3\")}\n        >\n          3\n        </StyledButton>\n        <StyledButton\n          id=\"add\"\n          bgColor=\"orange;\"\n          onClick={() => handleOperation(\"+\")}\n        >\n          +\n        </StyledButton>\n        <StyledButton\n          id=\"zero\"\n          bgColor=\"#aaa;\"\n          className=\"zero-btn\"\n          onClick={() => handleNumber(\"0\")}\n        >\n          0\n        </StyledButton>\n        <StyledButton id=\"decimal\" bgColor=\"#aaa;\" onClick={handleDecimal}>\n          .\n        </StyledButton>\n        <StyledButton\n          id=\"equals\"\n          className=\"equals-btn\"\n          bgColor=\"orange;\"\n          onClick={() => handleEquals(true)}\n        >\n          =\n        </StyledButton>\n      </div>\n    </Calculator>\n  );\n};\n\nconst Calculator = styled.div`\n  border: 1px solid #000;\n  box-shadow: 2px 3px 5px #000;\n  border-bottom: none;\n  border-radius: 0.5rem;\n  width: 80vw;\n  min-width: 15rem;\n  max-width: 40rem;\n  @media screen and (min-width: 768px) {\n    margin-right: 3rem;\n  }\n`;\n\nconst StyledButton = styled.button<{ bgColor: string }>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: white;\n  font-size: 1.5em;\n  font-weight: 500;\n  padding: 1rem 0;\n  border: 1px solid #000;\n  background-color: ${(p) => p.bgColor};\n  transition: 100ms all ease;\n  &:active {\n    box-shadow: inset 0 0 1rem #11111144;\n  }\n`;\n","import styled from \"styled-components\";\n\nexport const Legend: React.FC<{}> = () => {\n  return (\n    <StyledDiv>\n      <table>\n        <thead>\n          <tr>\n            <th colSpan={2} style={{ paddingBottom: \"1rem\" }}>\n              Key Strokes:\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>Clear</td>\n            <td>esc, c, C</td>\n          </tr>\n          <tr>\n            <td>Add</td>\n            <td>space, +</td>\n          </tr>\n          <tr>\n            <td>Subtract</td>\n            <td>-</td>\n          </tr>\n          <tr>\n            <td>Multiply</td>\n            <td>*, x, X</td>\n          </tr>\n          <tr>\n            <td>Divide</td>\n            <td>/</td>\n          </tr>\n          <tr>\n            <td>Equals</td>\n            <td>return, =</td>\n          </tr>\n          <tr>\n            <td>Numbers</td>\n            <td>0-9</td>\n          </tr>\n          <tr>\n            <td>Decimal</td>\n            <td>.</td>\n          </tr>\n          <tr>\n            <td>Percent</td>\n            <td>%</td>\n          </tr>\n          <tr>\n            <td>Plus/Minus</td>\n            <td>~</td>\n          </tr>\n        </tbody>\n      </table>\n    </StyledDiv>\n  );\n};\n\nconst StyledDiv = styled.div`\n  display: none;\n  @media screen and (min-width: 768px) {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 20rem;\n    color: #000;\n    background-color: rgba(255, 255, 255, 0.5);\n    border: 1px solid #000;\n    border-bottom: none;\n    border-radius: 0.5rem;\n    box-shadow: 2px 3px 5px #000;\n  }\n`;\n","import styled from \"styled-components\";\n\nexport const Display: React.FC<{ answer: string }> = ({ answer }) => {\n  // Using absolute value of answer as a workingAnswer, to simplify checks.\n  const isNegative = Number(answer) < 0;\n  let workingAnswer = isNegative ? answer.substring(1) : answer;\n  let finalAnswer = workingAnswer.substring(0, 8);\n  if (workingAnswer.includes(\"e\")) {\n    // Already converted into power of 10\n    const [number, power] = workingAnswer.split(\"e\");\n    finalAnswer = `${number.substring(0, 4)}e${power}`;\n  } else {\n    // Number greater than 99999999 or smaller than -99999999\n    let wholePart =\n      workingAnswer.indexOf(\".\") === -1\n        ? workingAnswer\n        : workingAnswer.split(\".\")[0];\n    if (wholePart.length > 8) {\n      let tempAns = Math.round(Number(workingAnswer.substring(0, 4)) / 10) + \"\";\n      finalAnswer = `${tempAns[0]}.${tempAns[1]}${tempAns[2]}e+${\n        tempAns.length === 4\n          ? workingAnswer.length - 1\n          : workingAnswer.length - 2\n      }`;\n    } else {\n      if (wholePart === \"0\" || wholePart === \"-0\") {\n        // Number closer to zero than Abs(0.000001)\n        let decimalPart =\n          workingAnswer.indexOf(\".\") === -1 ? \"\" : workingAnswer.split(\".\")[1];\n        let tempAns = Number(decimalPart).toString();\n        let leadingZeros = decimalPart.length - tempAns.length;\n        if (leadingZeros > 5) {\n          finalAnswer = `${tempAns[0]}.${tempAns[1]}${tempAns[2]}e-${\n            leadingZeros + 1\n          }`;\n        }\n      }\n    }\n  }\n\n  return (\n    <StyledDiv id=\"display\">\n      {isNegative && \"-\"}\n      {finalAnswer}\n    </StyledDiv>\n  );\n};\n\nconst StyledDiv = styled.div`\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-align: center;\n  -ms-flex-align: center;\n  align-items: center;\n  -webkit-box-pack: end;\n  -ms-flex-pack: end;\n  justify-content: flex-end;\n  font-size: 2em;\n  padding: 0.5rem 1rem;\n  border: 1px solid #000;\n  border-radius: 0.5rem 0.5rem 0 0;\n  background-color: #444;\n  cursor: default;\n`;\n","import styled from \"styled-components\";\n\nimport { Body, Legend } from \"./components\";\n\nexport const App: React.FC<{}> = () => {\n  return (\n    <>\n      <Title id=\"title\">Calculator</Title>\n      <Wrapper>\n        <Body />\n        <Legend />\n      </Wrapper>\n    </>\n  );\n};\n\nconst Title = styled.h2`\n  font-size: 2.5rem;\n  margin-bottom: 1rem;\n  text-shadow: 2px 2px 2px #fff;\n  text-align: center;\n  color: #000;\n  @media screen and (min-width: 768px) {\n    font-size: 3.5rem;\n    margin-bottom: 2rem;\n  }\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n","import { render } from \"react-dom\";\nimport { App } from \"./App\";\n\nimport \"./styles/main.scss\";\n\nrender(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}